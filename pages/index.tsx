import Head from "next/head";
import { GetServerSideProps } from "next";
import { serverSideTranslations } from "next-i18next/serverSideTranslations";
import ImageUpload from "@/src/components/global/image_cards/image_upload";
import StudentInfoPage from "@/src/components/page_components/admission_pages/admission_student_list_page/faculty_id_list_page/student_info_page";
import PersonalSubjectCard from "@/src/components/global/personal_subject_card";
import BidModal from "@/src/components/global/modals/bid_modal";
import NiceModal from "@ebay/nice-modal-react";
import { useRouter } from "next/router";
import { useChangeLanguage } from "@/src/hooks/useChangeLanguage";
import Link from "next/link";
import DirectionCard from "@/src/components/global/direction_card";
import AdminPage from "@/src/components/page_components/admin_page";
import ExamModal from "@/src/components/global/modals/exam_modal";
import CauseModal from "@/src/components/global/modals/cause_modal";
import CreateExamModal from "@/src/components/global/modals/create_exam_modal";

export default function Home() {
  const handleImageUpload = (file: File | null) => {
    console.log(file);
  };
  const onCreateBtnClink = () => {
    NiceModal.show(BidModal);
  };
  const onCreateBtnClink1 = () => {
    NiceModal.show(ExamModal);
  };
  const onCreateBtnClink2 = () => {
    NiceModal.show(CauseModal);
  };
  const onCreateBtnClink3 = () => {
    NiceModal.show(CreateExamModal);
  };

  return (
    <>
      <Head>
        <title>Главная</title>
        <meta name="description" content="Generated by create next app" />
      </Head>
      <div>
        <button
          style={{
            width: "100px",
          }}
          onClick={onCreateBtnClink}
        >
          click
        </button>
        <button
          style={{
            width: "100px",
          }}
          onClick={onCreateBtnClink1}
        >
          click
        </button>
        <button
          style={{
            width: "100px",
          }}
          onClick={onCreateBtnClink2}
        >
          click
        </button>
        <button
          style={{
            width: "100px",
          }}
          onClick={onCreateBtnClink3}
        >
          click
        </button>
      </div>
      {/* <DirectionCard
        titler={{
          button: {
            title: "932093 - Мультимедийные технологии",
            onClick: () => "click",
          },
          onCloseClick: () => "click",
        }}
        content={[
          {
            id: 0,
            title: "Информация",
            directionInfo: [
              {
                id: 1,
                title: "Название",
                description: "Мультимедийные технологии",
              },
              {
                id: 2,
                title: "Название",
                description: "Мультимедийные технологии",
              },
              {
                id: 3,
                title: "Название",
                description: "Мультимедийные технологии",
              },
            ],
          },
          {
            id: 1,
            title: "Информация",
            directionInfo: [
              {
                id: 1,
                title: "Название",
                description: "Мультимедийные технологии",
              },
              {
                id: 2,
                title: "Название",
                description: "Мультимедийные технологии",
              },
              {
                id: 3,
                title: "Название",
                description: "Мультимедийные технологии",
              },
            ],
          },
          {
            id: 2,
            title: "Информация",
            directionInfo: [
              {
                id: 1,
                title: "Название",
                description: "Мультимедийные технологии",
              },
              {
                id: 2,
                title: "Название",
                description: "Мультимедийные технологии",
              },
              {
                id: 3,
                title: "Название",
                description: "Мультимедийные технологии",
              },
            ],
          },
          {
            id: 3,
            title: "Информация",
            directionInfo: [
              {
                id: 1,
                title: "Название",
                description: "Мультимедийные технологии",
              },
              {
                id: 2,
                title: "Название",
                description: "Мультимедийные технологии",
              },
              {
                id: 3,
                title: "Название",
                description: "Мультимедийные технологии",
              },
            ],
          },
        ]}
      /> */}
      {/* <PersonalSubjectCard title="asd" description="asd" /> */}
      {/* <StudentInfoPage /> */}

      {/* <div>
       
      </div> */}
    </>
  );
}

{
  /* <div>
        <StatusIndicator type="new" title="новое" />
        <StatusIndicator type="returned" title="возвращено" />
        <StatusIndicator type="Invited" title="приглашено" />
        <StatusIndicator type="repeated" title="повторное" />
        <StatusIndicator type="waiting" title="Ожидающий" />
        <StatusIndicator type="approved" title="Одобрено" />
        <StatusIndicator type="pending" title="В ожидании" />
        <StatusIndicator type="incomplete" title="Неполный" />
        <StatusIndicator type="rated" title="Оценен" />
        <StatusIndicator type="notCome" title="Не пришел" />
        <StatusIndicator type="sent" title="Отправил" />
        <StatusIndicator type="paid" title="Оплаченный" />
        <StatusIndicator type="rejected" title="Отклонено" />
      </div> */
}

/*
  - student
    -- index.tsx (main page)
    -- application
      -- index.tsx (create)
      -- edit.tsx (edit)
    -- about_university
      -- index.tsx

  
  - admission ( {BASE_URL}/admission -> {BASE_URL}/admission/applications_list )
    -- applications_list
      -- index.tsx (main page)
      -- application
        -- index.tsx (personal data)
        -- history.tsx (history)
    -- exams_list
      -- index.tsx (main page)
    -- students_list
      -- index.tsx (main page)
      -- [faculty_id]
        -- index.tsx (list)
        stundent_info (404)
          -- [student_id].tsx (stundet info page)


  - marketing
    -- index.tsx (main_page)
    -- students_list
      -- index.tsx


  - accounting
    -- index.tsx (main page = students list)
    -- student_info
      -- [stundet_id].tsx (student info)
  
  
  - admin
    -- index.tsx (main page)
    -- create_faculty.tsx
*/

export const getServerSideProps: GetServerSideProps = async ({ locale }) => {
  return {
    props: {
      ...(await serverSideTranslations(locale as string, ["common"])),
    },
  };
};
